C51 COMPILER V9.00   STC_INIT                                                              03/16/2017 10:36:27 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE STC_INIT
OBJECT MODULE PLACED IN STC_INIT.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE STC_INIT.C BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          ////**********************************////
   2          //=================//
   3          //本程序适用于
   4          //用于USB485-232 写卡器
   5          //MCU：stc12c5a08s2
   6          //晶振：29.4912MHz 震荡周期0.4069us
   7          //文件：STC_INIT.C
   8          //================//
   9          ////**********************************////
  10          #include<STC_INIT.H>
  11          #include<math.h>
  12          //*************************//
  13          //name:init_time0
  14          //discription:定时器0中断初始化
  15          //in:  TIME  MOD   VALUE   定时器号 工作模式 定时值
  16          //out:
  17          void init_time(char TIME,TIM_MOD_Type MOD,TIM_VALUE_Type VALUE)
  18          {
  19   1      /*****
  20   1      //定时器0
  21   1      *****/    
  22   1        if((TIME&0x01)==TIME_0)
  23   1        {
  24   2           if(MOD==WIDE13) TMOD=(TMOD&0xf0)|0x00; 
  25   2           else if(MOD==WIDE16) TMOD=(TMOD&0xf0)|0x01;
  26   2           else if(MOD==WIDE8) TMOD=(TMOD&0xf0)|0x02;
  27   2           else if(MOD==WIDE8D) TMOD=(TMOD&0xf0)|0x03;
  28   2           TH0=(65535-VALUE)/256;
  29   2           TL0=(65535-VALUE)%256;
  30   2           TR0=1;
  31   2           ET0=1;
  32   2        }
  33   1      /*****
  34   1      //定时器1
  35   1      *****/    
  36   1        if((TIME&0x02)==TIME_1)
  37   1        {
  38   2           if(MOD==WIDE13) TMOD=(TMOD&0x0f)|0x00; 
  39   2           else if(MOD==WIDE16) TMOD=(TMOD&0x0f)|0x10;
  40   2           else if(MOD==WIDE8) TMOD=(TMOD&0x0f)|0x20;
  41   2           else if(MOD==WIDE8D) TMOD=(TMOD&0x0f)|0x30;  
  42   2           TH1=(65535-VALUE)/256;
  43   2           TL1=(65535-VALUE)%256;
  44   2           TR1=1;
  45   2           ET1=1;
  46   2        }
  47   1      }
  48          //**//
  49          //*************************//
  50          //name:init_uart
  51          //discription:串行口中断初始化
  52          //in:  S_UART  MOD  S_BTR  S_MOD  VALUE  串口号 工作模式 选择波特率发生器 是否加倍 波特率值
  53          //out:
  54          void init_uart(char S_UART,UART_MOD_Type MOD,UART_MOD_Type S_BTR,UART_MOD_Type S_MOD,TIM_VALUE_Type VALUE)
  55          {
C51 COMPILER V9.00   STC_INIT                                                              03/16/2017 10:36:27 PAGE 2   

  56   1      /*****
  57   1      //串口1
  58   1      *****/  
  59   1        if((S_UART&0x01)==UART_1)
  60   1        {
  61   2          switch(MOD)
  62   2          {
  63   3            case MOD0:
  64   3              SM0=0;
  65   3              SM1=0;
  66   3              break;
  67   3            case MOD1:
  68   3              SM0=0;
  69   3              SM1=1;
  70   3              break;
  71   3            case MOD2:
  72   3              SM0=1;
  73   3              SM1=0;
  74   3              break;
  75   3            case MOD3:
  76   3              SM0=1;
  77   3              SM1=1;
  78   3              break;
  79   3            default:
  80   3              break;    
  81   3          }
  82   2          if(S_BTR==BTR_BTR)
  83   2          {
  84   3            if(S_MOD==ISSMOD)
  85   3            {
  86   4              PCON|=0x80;
  87   4              BRT=VALUE;
  88   4            }else if(S_MOD==NOSMOD)
  89   3            {
  90   4              PCON&=0x7f;
  91   4              BRT=VALUE;      
  92   4            }
  93   3            AUXR&=0XE0;
  94   3            AUXR|=0X11; 
  95   3          }
  96   2          else if(S_BTR==BTR_TM1)
  97   2          {
  98   3            TMOD&=0X0F;
  99   3            TMOD|=0X20;
 100   3            AUXR&=0Xfe;
 101   3            if(S_MOD==ISSMOD)
 102   3            {
 103   4              PCON|=0x80;
 104   4              TH1=VALUE;
 105   4              TL1=VALUE;   
 106   4            }else if(S_MOD==NOSMOD)
 107   3            {
 108   4              PCON&=0x7f;
 109   4              TH1=VALUE;
 110   4              TL1=VALUE;              
 111   4            }
 112   3            TR1=1;    
 113   3          }
 114   2          ES=1;
 115   2        
 116   2        }
 117   1      /*****
C51 COMPILER V9.00   STC_INIT                                                              03/16/2017 10:36:27 PAGE 3   

 118   1      //串口2
 119   1      *****/  
 120   1        if((S_UART&0x02)==UART_2)
 121   1        {
 122   2          switch(MOD)
 123   2          {
 124   3            case MOD0:
 125   3              S2CON&=0X3F;
 126   3              break;
 127   3            case MOD1:
 128   3              S2CON&=0X3F;
 129   3              S2CON|=0X40;
 130   3              break;
 131   3            case MOD2:
 132   3              S2CON&=0X3F;
 133   3              S2CON|=0X80;
 134   3              break;
 135   3            case MOD3:
 136   3              S2CON&=0X3F;
 137   3              S2CON|=0XC0;
 138   3              break;
 139   3            default:
 140   3              break;    
 141   3          }
 142   2          if(S_BTR==BTR_BTR)
 143   2          {
 144   3            if(S_MOD==ISSMOD)
 145   3            {
 146   4              AUXR&=0XE3;
 147   4              AUXR|=0x18;
 148   4              BRT=VALUE;
 149   4            }else if(S_MOD==NOSMOD)
 150   3            {
 151   4              AUXR&=0XE3;
 152   4              AUXR|=0x10;
 153   4              BRT=VALUE;    
 154   4            }
 155   3          }
 156   2          IE2|=0X01;  
 157   2        }  
 158   1      }
 159          //**//
 160          
 161          //*************************//
 162          //name:init_gpio_config
 163          //discription:IO口模式配置
 164          //in:  GPIO_NAME_Type GPIO_MOD_Type GPIO_PIN_Type IO口 配置模式 引脚选择
 165          //out:
 166          void init_gpio_config(char io,GPIO_MOD_Type io_mod,char io_pin)
 167          {
 168   1      /*****
 169   1      //P0
 170   1      *****/  
 171   1          if((io&0x01)==GPIO_0)
 172   1          {
 173   2            if(io_mod==GPIO_STANDERD)
 174   2            {
 175   3                P0M0&=(~io_pin);
 176   3                P0M1&=(~io_pin);
 177   3            }else if(io_mod==GPIO_PUSHPULL)
 178   2            {
 179   3                P0M0|=io_pin;
C51 COMPILER V9.00   STC_INIT                                                              03/16/2017 10:36:27 PAGE 4   

 180   3                P0M1&=(~io_pin);        
 181   3            }else if(io_mod==GPIO_HIGHIMPEDENCE)
 182   2            {
 183   3                P0M0&=(~io_pin);
 184   3                P0M1|=io_pin;       
 185   3            }else if(io_mod==GPIO_OPENDRAIN)
 186   2            {
 187   3                P0M0|=io_pin;
 188   3                P0M1|=io_pin;       
 189   3            }
 190   2          }
 191   1      /*****
 192   1      //P1
 193   1      *****/    
 194   1          if((io&0x02)==GPIO_1)
 195   1          {
 196   2            if(io_mod==GPIO_STANDERD)
 197   2            {
 198   3                P1M0&=(~io_pin);
 199   3                P1M1&=(~io_pin);
 200   3            }else if(io_mod==GPIO_PUSHPULL)
 201   2            {
 202   3                P1M0|=io_pin;
 203   3                P1M1&=(~io_pin);        
 204   3            }else if(io_mod==GPIO_HIGHIMPEDENCE)
 205   2            {
 206   3                P1M0&=(~io_pin);
 207   3                P1M1|=io_pin;       
 208   3            }else if(io_mod==GPIO_OPENDRAIN)
 209   2            {
 210   3                P1M0|=io_pin;
 211   3                P1M1|=io_pin;       
 212   3            }     
 213   2          }
 214   1      /*****
 215   1      //P2
 216   1      *****/    
 217   1          if((io&0x04)==GPIO_2)
 218   1          {
 219   2            if(io_mod==GPIO_STANDERD)
 220   2            {
 221   3                P2M0&=(~io_pin);
 222   3                P2M1&=(~io_pin);
 223   3            }else if(io_mod==GPIO_PUSHPULL)
 224   2            {
 225   3                P2M0|=io_pin;
 226   3                P2M1&=(~io_pin);        
 227   3            }else if(io_mod==GPIO_HIGHIMPEDENCE)
 228   2            {
 229   3                P2M0&=(~io_pin);
 230   3                P2M1|=io_pin;       
 231   3            }else if(io_mod==GPIO_OPENDRAIN)
 232   2            {
 233   3                P2M0|=io_pin;
 234   3                P2M1|=io_pin;       
 235   3            }     
 236   2          }
 237   1      /*****
 238   1      //P3
 239   1      *****/    
 240   1          if((io&0x08)==GPIO_3)
 241   1          {
C51 COMPILER V9.00   STC_INIT                                                              03/16/2017 10:36:27 PAGE 5   

 242   2            if(io_mod==GPIO_STANDERD)
 243   2            {
 244   3                P3M0&=(~io_pin);
 245   3                P3M1&=(~io_pin);
 246   3            }else if(io_mod==GPIO_PUSHPULL)
 247   2            {
 248   3                P3M0|=io_pin;
 249   3                P3M1&=(~io_pin);        
 250   3            }else if(io_mod==GPIO_HIGHIMPEDENCE)
 251   2            {
 252   3                P3M0&=(~io_pin);
 253   3                P3M1|=io_pin;       
 254   3            }else if(io_mod==GPIO_OPENDRAIN)
 255   2            {
 256   3                P3M0|=io_pin;
 257   3                P3M1|=io_pin;       
 258   3            }     
 259   2          }
 260   1      /*****
 261   1      //P4
 262   1      *****/    
 263   1          if((io&0x10)==GPIO_4)
 264   1          {
 265   2            if(io_mod==GPIO_STANDERD)
 266   2            {
 267   3                P4M0&=(~io_pin);
 268   3                P4M1&=(~io_pin);
 269   3            }else if(io_mod==GPIO_PUSHPULL)
 270   2            {
 271   3                P4M0|=io_pin;
 272   3                P4M1&=(~io_pin);        
 273   3            }else if(io_mod==GPIO_HIGHIMPEDENCE)
 274   2            {
 275   3                P4M0&=(~io_pin);
 276   3                P4M1|=io_pin;       
 277   3            }else if(io_mod==GPIO_OPENDRAIN)
 278   2            {
 279   3                P4M0|=io_pin;
 280   3                P4M1|=io_pin;       
 281   3            }     
 282   2          }
 283   1      }
 284          //**//


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    722    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
