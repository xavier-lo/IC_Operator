C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE STC_USER
OBJECT MODULE PLACED IN STC_USER.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE STC_USER.C BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          ////**********************************////
   2          //=================//
   3          //本程序适用于
   4          //用于USB485-232 写卡器
   5          //MCU：stc12c5a08s2
   6          //晶振：29.4912MHz 震荡周期0.4069us
   7          //文件：STC_USER.C
   8          //================//
   9          ////**********************************////
  10          #include<STC_USER.H>
  11          #include<STC_INIT.H>
  12          
  13          sbit LED1=P1^6;
  14          sbit LED2=P1^7;
  15          sbit LED7=P0^1;
  16          sbit LED8=P0^2;
  17          sbit LED9=P0^3;
  18          
  19          /*****定义局部字节变量*****/
  20          unsigned char temp,temp1,temp2,verr_temp;
  21          unsigned char xdata send_data[30];
  22          volatile unsigned char xdata send_pc_data[50];
  23          volatile unsigned char send_pc_count=0;
  24          /***/
  25          
  26          /*****定义局部位变量*****/
  27          
  28          volatile unsigned char xdata received_CARDHEAD_data[28];//接收卡头数据成功
  29          volatile unsigned char receive_cardhead_start=0;//接收卡头数据开始  
  30          
  31          volatile unsigned char receive_cardhead_success=0;//接收卡头数据成功标志  
  32          volatile unsigned char receive_card_state=0x00;//接收卡数据状态
  33          /***/
  34          
  35          
  36          /*全局变量定义*/
  37          extern unsigned char xdata received_PC_data[48];//接收来自PC数据  
  38          extern unsigned char xdata receive_PC_data[50];//接收来自PC数据  
  39          extern bit time_200ms_ready;
  40          extern unsigned char xdata receive_CARDHEAD_data[30];//接受来自卡头数据 
  41          extern bit receive_pc_success;//接收PC数据成功标志  
  42          /**/
  43          
  44          //******************************//
  45          //name:action
  46          //discription:执行函数
  47          //in:
  48          //out:
  49          void action(void)
  50          {
  51   1        if(receive_pc_success)
  52   1        {
  53   2          receive_pc_success=0;
  54   2          switch(received_PC_data[1])
  55   2          {
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 2   

  56   3            case 0x00:  Seek_Card();
  57   3                break;  
  58   3            case 0x02:  Read_2block_Card_nopass(received_PC_data[2]);
  59   3                break;
  60   3            case 0x12:  Write_2block_Card_nopass(received_PC_data[2],&received_PC_data);
  61   3                break;
  62   3            case 0x05:  Change_Password(received_PC_data[2],&received_PC_data);
  63   3                break;
  64   3            case 0x22:  Change_CardHead_Password(&received_PC_data);
  65   3                break;
  66   3            case 0x03:  Read_1block_Card_havepass(received_PC_data[2],&received_PC_data);
  67   3                break;  
  68   3            case 0x04:  Write_1block_Card_havepass(received_PC_data[2],&received_PC_data);
  69   3                break;
  70   3            case 0x01:  Read_1block_Card_nopass(received_PC_data[2]);
  71   3                break;
  72   3            case 0x11:  Write_1block_Card_nopass(received_PC_data[2],&received_PC_data);
  73   3                break;
  74   3            case 0x06:
  75   3                break;
  76   3            default:  break;
  77   3          }
  78   2          /*
  79   2          if(received_PC_data[1]==0x00)
  80   2          {
  81   2            Seek_Card();
  82   2          }else if(received_PC_data[1]==0x02)
  83   2          {
  84   2            Read_2block_Card_nopass(received_PC_data[2]);
  85   2          }else if(received_PC_data[1]==0x12)
  86   2          {
  87   2            Write_2block_Card_nopass(received_PC_data[2],&received_PC_data);
  88   2          }else if(received_PC_data[1]==0x05)
  89   2          {
  90   2              Change_Password(received_PC_data[2],&received_PC_data);
  91   2          }else if(received_PC_data[1]==0x22)
  92   2          {
  93   2              Change_CardHead_Password(&received_PC_data);
  94   2          }else if(received_PC_data[1]==0x03)
  95   2          {
  96   2              Read_1block_Card_havepass(received_PC_data[2],&received_PC_data);
  97   2          }else if(received_PC_data[1]==0x04)
  98   2          {
  99   2              Write_1block_Card_havepass(received_PC_data[2],&received_PC_data);
 100   2          }else if(received_PC_data[1]==0x01)
 101   2          {
 102   2              Read_1block_Card_nopass(received_PC_data[2]);
 103   2          }else if(received_PC_data[1]==0x11)
 104   2          {
 105   2              Write_1block_Card_nopass(received_PC_data[2],&received_PC_data);
 106   2          }
 107   2      */
 108   2        }
 109   1      
 110   1      }
 111          //***//
 112          //******************************//
 113          //name:init
 114          //discription:初始化函数
 115          //in:
 116          //out:
 117          void init(void)
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 3   

 118          {
 119   1        init_uart(UART_1,MOD1,BTR_TM1,NOSMOD,BTR_19200);
 120   1        init_uart(UART_2,MOD1,BTR_BTR,NOSMOD,BTR_19200);
 121   1        init_time(TIME_0,WIDE16,t_20ms);
 122   1        
 123   1      }
 124          //***//
 125          //***//
 126          
 127          
 128          //******************************//
 129          //name:PC_SeekCard
 130          //discription:寻卡
 131          //in:
 132          //out:
 133          void Seek_Card(void)
 134          {
 135   1            cardhead_seek();
 136   1            receive_card_state=0;     
 137   1            while(receive_card_state==0x00);
 138   1            if(received_CARDHEAD_data[1]==0x20) 
 139   1            {
 140   2                char i=0;
 141   2                send_pc_data[0]=0xbe;
 142   2                send_pc_data[1]=0x08;
 143   2                send_pc_data[2]=0x00;
 144   2                send_pc_data[3]=0x00;
 145   2                while(i<4)
 146   2                {
 147   3                    send_pc_data[4+i]=received_CARDHEAD_data[2+i];
 148   3                    i++;
 149   3                }
 150   2                i=2;
 151   2                send_pc_data[8]=send_pc_data[1];
 152   2                while(i<8)
 153   2                send_pc_data[8]^=send_pc_data[i++];
 154   2                send_pc_data[9]=0xe0; 
 155   2      //          REN=0;
 156   2      //          send_pc_count=0;
 157   2      //          SBUF=send_pc_data[send_pc_count++];
 158   2                LED1=1;
 159   2                send_to_pc(&send_pc_data);          
 160   2            }
 161   1              else if(received_CARDHEAD_data[1]==0xdf)  
 162   1            {
 163   2                char i=0;
 164   2                send_pc_data[0]=0xbe;
 165   2                send_pc_data[1]=0x08;
 166   2                send_pc_data[2]=0x80;
 167   2                send_pc_data[3]=0x00;
 168   2                while(i<4)
 169   2                {
 170   3                    send_pc_data[4+i]=00;
 171   3                    i++;
 172   3                }
 173   2                i=2;
 174   2                send_pc_data[8]=send_pc_data[1];
 175   2                while(i<8)
 176   2                send_pc_data[8]^=send_pc_data[i++];
 177   2                send_pc_data[9]=0xe0; 
 178   2      //          REN=0;
 179   2      //          send_pc_count=0;
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 4   

 180   2      //          SBUF=send_pc_data[send_pc_count++];
 181   2                LED1=0;
 182   2                send_to_pc(&send_pc_data);          
 183   2            }     
 184   1      }
 185          //***//
 186          
 187          
 188          
 189          
 190          //******************************//
 191          //name:Read_1block_Card_nopass
 192          //discription:读1块数据 A密地址
 193          //in:
 194          //out:
 195          void Read_1block_Card_nopass(unsigned char block)
 196          {
 197   1            char i=0;
 198   1            cardhead_seek();
 199   1            receive_card_state=0;     
 200   1            while(receive_card_state==0x00);
 201   1            if(received_CARDHEAD_data[1]==0x20) 
 202   1            { 
 203   2              cardhead_read(block); 
 204   2              receive_card_state=0;   
 205   2              while(receive_card_state==0x00);
 206   2              if(received_CARDHEAD_data[1]==0x21) 
 207   2              {
 208   3                  send_pc_data[0]=0xbe;
 209   3                  send_pc_data[1]=0x14;
 210   3                  send_pc_data[2]=0x01;
 211   3                  send_pc_data[3]=block;
 212   3                  i=0;
 213   3                  while(i<16)
 214   3                  {
 215   4                      send_pc_data[4+i]=received_CARDHEAD_data[2+i];
 216   4                      i++;
 217   4                  }
 218   3                  i=2;
 219   3                  send_pc_data[20]=send_pc_data[1];
 220   3                  while(i<20)
 221   3                  send_pc_data[20]^=send_pc_data[i++];
 222   3                  send_pc_data[21]=0xe0;  
 223   3      //                REN=0;
 224   3      //                send_pc_count=0;
 225   3      //                SBUF=send_pc_data[send_pc_count++];
 226   3                  LED1=1;
 227   3                  send_to_pc(&send_pc_data);
 228   3                  return;               
 229   3      
 230   3              }
 231   2                send_pc_data[0]=0xbe;
 232   2                send_pc_data[1]=0x14;
 233   2                send_pc_data[2]=0x81;
 234   2                send_pc_data[3]=block;
 235   2                i=0;
 236   2                while(i<16)
 237   2                {
 238   3                    send_pc_data[4+i]=0;
 239   3                    i++;
 240   3                }
 241   2                i=2;
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 5   

 242   2                send_pc_data[20]=send_pc_data[1];
 243   2                while(i<20)
 244   2                send_pc_data[20]^=send_pc_data[i++];
 245   2                send_pc_data[21]=0xe0;
 246   2      //          REN=0;
 247   2      //          send_pc_count=0;
 248   2      //          SBUF=send_pc_data[send_pc_count++];
 249   2                LED1=0;     
 250   2                send_to_pc(&send_pc_data);          
 251   2            }
 252   1              else if(received_CARDHEAD_data[1]==0xdf)  
 253   1            {         
 254   2                send_pc_data[0]=0xbe;
 255   2                send_pc_data[1]=0x14;
 256   2                send_pc_data[2]=0x81;
 257   2                send_pc_data[3]=block;
 258   2                i=0;
 259   2                while(i<16)
 260   2                {
 261   3                    send_pc_data[4+i]=0;
 262   3                    i++;
 263   3                }
 264   2                i=2;
 265   2                send_pc_data[20]=send_pc_data[1];
 266   2                while(i<20)
 267   2                send_pc_data[20]^=send_pc_data[i++];
 268   2                send_pc_data[21]=0xe0;
 269   2      //          REN=0;
 270   2      //          send_pc_count=0;
 271   2      //          SBUF=send_pc_data[send_pc_count++];
 272   2                LED1=0;
 273   2                send_to_pc(&send_pc_data);
 274   2            } 
 275   1      }
 276          //***//
 277          
 278          //******************************//
 279          //name:Write_1block_Card_nopass
 280          //discription:写一块数据 A密地址
 281          //in:
 282          //out:
 283          void Write_1block_Card_nopass(unsigned char block,unsigned char *indata0)
 284          {
 285   1            char i=0;
 286   1            unsigned char in[16];
 287   1            cardhead_seek();
 288   1            receive_card_state=0;     
 289   1            while(receive_card_state==0x00);
 290   1            if(received_CARDHEAD_data[1]==0x20) 
 291   1            { 
 292   2              i=0;
 293   2              while(i<16)
 294   2              {
 295   3                  in[i]=indata0[3+i];
 296   3                  i++;
 297   3              }         
 298   2              cardhead_write(block,&in);  
 299   2              receive_card_state=0;   
 300   2              while(receive_card_state==0x00);
 301   2              if(received_CARDHEAD_data[1]==0x22) 
 302   2              {
 303   3                  cardhead_read(block); 
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 6   

 304   3                  receive_card_state=0;   
 305   3                  while(receive_card_state==0x00);
 306   3                  if(received_CARDHEAD_data[1]==0x21) 
 307   3                  {
 308   4                      send_pc_data[0]=0xbe;
 309   4                      send_pc_data[1]=0x14;
 310   4                      send_pc_data[2]=0x11;
 311   4                      send_pc_data[3]=block;
 312   4                      i=0;
 313   4                      while(i<16)
 314   4                      {
 315   5                          send_pc_data[4+i]=received_CARDHEAD_data[2+i];
 316   5                          i++;
 317   5                      }
 318   4                      i=2;
 319   4                      send_pc_data[20]=send_pc_data[1];
 320   4                      while(i<20)
 321   4                        send_pc_data[20]^=send_pc_data[i++];
 322   4                      send_pc_data[21]=0xe0;  
 323   4                      i=0;
 324   4                      while(i<16)
 325   4                      {
 326   5                          if(in[i]==send_pc_data[4+i]) i++;
 327   5                          else break;
 328   5                      }
 329   4                      if(i==16)
 330   4                      {
 331   5          //                REN=0;
 332   5          //                send_pc_count=0;
 333   5          //                SBUF=send_pc_data[send_pc_count++];
 334   5                          LED1=1;
 335   5                          send_to_pc(&send_pc_data);
 336   5                          return;                 
 337   5                      }                 
 338   4                  }
 339   3              }
 340   2                send_pc_data[0]=0xbe;
 341   2                send_pc_data[1]=0x14;
 342   2                send_pc_data[2]=0x91;
 343   2                send_pc_data[3]=block;
 344   2                i=0;
 345   2                while(i<16)
 346   2                {
 347   3                    send_pc_data[4+i]=0;
 348   3                    i++;
 349   3                }
 350   2                i=2;
 351   2                send_pc_data[20]=send_pc_data[1];
 352   2                while(i<20)
 353   2                send_pc_data[20]^=send_pc_data[i++];
 354   2                send_pc_data[21]=0xe0;
 355   2      //          REN=0;
 356   2      //          send_pc_count=0;
 357   2      //          SBUF=send_pc_data[send_pc_count++];
 358   2                LED1=0;     
 359   2                send_to_pc(&send_pc_data);          
 360   2            }
 361   1              else if(received_CARDHEAD_data[1]==0xdf)  
 362   1            {         
 363   2                send_pc_data[0]=0xbe;
 364   2                send_pc_data[1]=0x14;
 365   2                send_pc_data[2]=0x91;
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 7   

 366   2                send_pc_data[3]=block;
 367   2                i=0;
 368   2                while(i<16)
 369   2                {
 370   3                    send_pc_data[4+i]=0;
 371   3                    i++;
 372   3                }
 373   2                i=2;
 374   2                send_pc_data[20]=send_pc_data[1];
 375   2                while(i<20)
 376   2                send_pc_data[20]^=send_pc_data[i++];
 377   2                send_pc_data[21]=0xe0;
 378   2      //          REN=0;
 379   2      //          send_pc_count=0;
 380   2      //          SBUF=send_pc_data[send_pc_count++];
 381   2                LED1=0;
 382   2                send_to_pc(&send_pc_data);
 383   2            } 
 384   1      }
 385          //***//
 386          
 387          
 388          //******************************//
 389          //name:Read_2block_Card_nopass
 390          //discription:读卡 使用A密地址
 391          //in:
 392          //out:
 393          void Read_2block_Card_nopass(unsigned char block)
 394          {
 395   1            char i=0;
 396   1            cardhead_seek();
 397   1            receive_card_state=0;     
 398   1            while(receive_card_state==0x00);
 399   1            if(received_CARDHEAD_data[1]==0x20) 
 400   1            {       
 401   2              cardhead_read(block); 
 402   2              receive_card_state=0;   
 403   2              while(receive_card_state==0x00);
 404   2              if(received_CARDHEAD_data[1]==0x21) 
 405   2              {
 406   3                  send_pc_data[0]=0xbe;
 407   3                  send_pc_data[1]=0x24;
 408   3                  send_pc_data[2]=0x02;
 409   3                  send_pc_data[3]=block;
 410   3                  i=0;
 411   3                  while(i<16)
 412   3                  {
 413   4                      send_pc_data[4+i]=received_CARDHEAD_data[2+i];
 414   4                      i++;
 415   4                  }
 416   3                  cardhead_read(block+1); 
 417   3                  receive_card_state=0;   
 418   3                  while(receive_card_state==0x00);
 419   3                  if(received_CARDHEAD_data[1]==0x21) 
 420   3                  {
 421   4                      i=0;
 422   4                      while(i<16)
 423   4                      {
 424   5                          send_pc_data[20+i]=received_CARDHEAD_data[2+i];
 425   5                          i++;
 426   5                      } 
 427   4                      i=2;
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 8   

 428   4                      send_pc_data[36]=send_pc_data[1];
 429   4                      while(i<36)
 430   4                      send_pc_data[36]^=send_pc_data[i++];
 431   4                      send_pc_data[37]=0xe0;  
 432   4      //                REN=0;
 433   4      //                send_pc_count=0;
 434   4      //                SBUF=send_pc_data[send_pc_count++];
 435   4                      LED1=1;
 436   4                      send_to_pc(&send_pc_data);
 437   4                      return;               
 438   4                  } 
 439   3              }
 440   2                send_pc_data[0]=0xbe;
 441   2                send_pc_data[1]=0x24;
 442   2                send_pc_data[2]=0x82;
 443   2                send_pc_data[3]=block;
 444   2                i=0;
 445   2                while(i<32)
 446   2                {
 447   3                    send_pc_data[4+i]=00;
 448   3                    i++;
 449   3                }
 450   2                i=2;
 451   2                send_pc_data[36]=send_pc_data[1];
 452   2                while(i<36)
 453   2                send_pc_data[36]^=send_pc_data[i++];
 454   2                send_pc_data[37]=0xe0;  
 455   2      //          REN=0;
 456   2      //          send_pc_count=0;
 457   2      //          SBUF=send_pc_data[send_pc_count++];
 458   2                LED1=0;     
 459   2                send_to_pc(&send_pc_data);          
 460   2            }
 461   1              else if(received_CARDHEAD_data[1]==0xdf)  
 462   1            {         
 463   2                send_pc_data[0]=0xbe;
 464   2                send_pc_data[1]=0x24;
 465   2                send_pc_data[2]=0x82;
 466   2                send_pc_data[3]=block;
 467   2                i=0;
 468   2                while(i<32)
 469   2                {
 470   3                    send_pc_data[4+i]=00;
 471   3                    i++;
 472   3                }
 473   2                i=2;
 474   2                send_pc_data[36]=send_pc_data[1];
 475   2                while(i<36)
 476   2                send_pc_data[36]^=send_pc_data[i++];
 477   2                send_pc_data[37]=0xe0;  
 478   2      //          REN=0;
 479   2      //          send_pc_count=0;
 480   2      //          SBUF=send_pc_data[send_pc_count++];
 481   2                LED1=0;
 482   2                send_to_pc(&send_pc_data);
 483   2            }     
 484   1      }
 485          //***//
 486          
 487          
 488          //******************************//
 489          //name:Write_2block_Card_nopass
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 9   

 490          //discription:写卡 使用A密地址
 491          //in:
 492          //out:
 493          void Write_2block_Card_nopass(unsigned char block,unsigned char *indata)
 494          {
 495   1            char i=0;
 496   1            unsigned char in[16];
 497   1            cardhead_seek();
 498   1            receive_card_state=0;     
 499   1            while(receive_card_state==0x00);
 500   1            if(received_CARDHEAD_data[1]==0x20) 
 501   1            { 
 502   2              i=0;
 503   2              while(i<16)
 504   2              {
 505   3                in[i]=indata[3+i];
 506   3                i++;
 507   3              }
 508   2              cardhead_write(block,&in);  
 509   2              receive_card_state=0;   
 510   2              while(receive_card_state==0x00);
 511   2              if(received_CARDHEAD_data[1]==0x22) 
 512   2              {
 513   3                  i=0;
 514   3                  while(i<16)
 515   3                  {
 516   4                    in[i]=indata[19+i];
 517   4                    i++;
 518   4                  }
 519   3                  cardhead_write(block+1,&in);  
 520   3                  receive_card_state=0;   
 521   3                  while(receive_card_state==0x00);
 522   3                  if(received_CARDHEAD_data[1]==0x22) 
 523   3                  {
 524   4                      cardhead_read(block); 
 525   4                      receive_card_state=0;   
 526   4                      while(receive_card_state==0x00);
 527   4                      if(received_CARDHEAD_data[1]==0x21) 
 528   4                      {
 529   5                          send_pc_data[0]=0xbe;
 530   5                          send_pc_data[1]=0x24;
 531   5                          send_pc_data[2]=0x12;
 532   5                          send_pc_data[3]=block;
 533   5                          i=0;
 534   5                          while(i<16)
 535   5                          {
 536   6                              send_pc_data[4+i]=received_CARDHEAD_data[2+i];
 537   6                              i++;
 538   6                          }
 539   5                          cardhead_read(block+1); 
 540   5                          receive_card_state=0;   
 541   5                          while(receive_card_state==0x00);
 542   5                          if(received_CARDHEAD_data[1]==0x21) 
 543   5                          {
 544   6                              i=0;
 545   6                              while(i<16)
 546   6                              {
 547   7                                  send_pc_data[20+i]=received_CARDHEAD_data[2+i];
 548   7                                  i++;
 549   7                              } 
 550   6                              i=2;
 551   6                              send_pc_data[36]=send_pc_data[1];
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 10  

 552   6                              while(i<36)
 553   6                              send_pc_data[36]^=send_pc_data[i++];
 554   6                              send_pc_data[37]=0xe0;  
 555   6                              i=0;
 556   6                              while(i<32)
 557   6                              {
 558   7                                  if(send_pc_data[4+i]==indata[3+i]) i++;
 559   7                                  else break;                             
 560   7                              }
 561   6                              if(i==32)
 562   6                              {
 563   7      //                            REN=0;
 564   7      //                            send_pc_count=0;
 565   7      //                            SBUF=send_pc_data[send_pc_count++];
 566   7                                  LED1=1;
 567   7                                  send_to_pc(&send_pc_data);
 568   7                                  return;                           
 569   7                              }             
 570   6                          } 
 571   5                      }             
 572   4                  }
 573   3      
 574   3              }
 575   2                send_pc_data[0]=0xbe;
 576   2                send_pc_data[1]=0x24;
 577   2                send_pc_data[2]=0x92;
 578   2                send_pc_data[3]=block;
 579   2                i=0;
 580   2                while(i<32)
 581   2                {
 582   3                    send_pc_data[4+i]=00;
 583   3                    i++;
 584   3                }
 585   2                i=2;
 586   2                send_pc_data[36]=send_pc_data[1];
 587   2                while(i<36)
 588   2                send_pc_data[36]^=send_pc_data[i++];
 589   2                send_pc_data[37]=0xe0;  
 590   2      //          REN=0;
 591   2      //          send_pc_count=0;
 592   2      //          SBUF=send_pc_data[send_pc_count++];
 593   2                LED1=0;
 594   2                send_to_pc(&send_pc_data);          
 595   2            }
 596   1              else if(received_CARDHEAD_data[1]==0xdf)  
 597   1            {         
 598   2                send_pc_data[0]=0xbe;
 599   2                send_pc_data[1]=0x24;
 600   2                send_pc_data[2]=0x92;
 601   2                send_pc_data[3]=block;
 602   2                i=0;
 603   2                while(i<32)
 604   2                {
 605   3                    send_pc_data[4+i]=00;
 606   3                    i++;
 607   3                }
 608   2                i=2;
 609   2                send_pc_data[36]=send_pc_data[1];
 610   2                while(i<36)
 611   2                send_pc_data[36]^=send_pc_data[i++];
 612   2                send_pc_data[37]=0xe0;  
 613   2      //          REN=0;
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 11  

 614   2      //          send_pc_count=0;
 615   2      //          SBUF=send_pc_data[send_pc_count++];
 616   2                LED1=0;
 617   2                send_to_pc(&send_pc_data);
 618   2            }     
 619   1      }
 620          //***//
 621          
 622          //******************************//
 623          //name:Change_Password
 624          //discription:更改密码 A密
 625          //in:
 626          //out:
 627          void Change_Password(unsigned char block,unsigned char *inpass)
 628          {
 629   1            char i=0;
 630   1            unsigned char oldpass[6];
 631   1            unsigned char newpass[6];
 632   1            cardhead_seek();
 633   1            receive_card_state=0;     
 634   1            while(receive_card_state==0x00);
 635   1            if(received_CARDHEAD_data[1]==0x20) 
 636   1            { 
 637   2              i=0;
 638   2              while(i<6)
 639   2              {
 640   3                  oldpass[i]=inpass[3+i];
 641   3                  i++;
 642   3              }
 643   2              i=0;
 644   2              while(i<6)
 645   2              {
 646   3                  newpass[i]=inpass[9+i];
 647   3                  i++;
 648   3              }       
 649   2              cardhead_writepass(block,&oldpass,&newpass);  
 650   2              receive_card_state=0;   
 651   2              while(receive_card_state==0x00);
 652   2              if(received_CARDHEAD_data[1]==0x22) 
 653   2              {
 654   3                  send_pc_data[0]=0xbe;
 655   3                  send_pc_data[1]=0x04;
 656   3                  send_pc_data[2]=0x05;
 657   3                  send_pc_data[3]=block;
 658   3                  i=2;
 659   3                  send_pc_data[4]=send_pc_data[1];
 660   3                  while(i<4)
 661   3                  send_pc_data[4]^=send_pc_data[i++];
 662   3                  send_pc_data[5]=0xe0; 
 663   3      //                REN=0;
 664   3      //                send_pc_count=0;
 665   3      //                SBUF=send_pc_data[send_pc_count++];
 666   3                  LED1=1;
 667   3                  send_to_pc(&send_pc_data);
 668   3                  return;               
 669   3      
 670   3              }
 671   2                send_pc_data[0]=0xbe;
 672   2                send_pc_data[1]=0x04;
 673   2                send_pc_data[2]=0x85;
 674   2                send_pc_data[3]=block;
 675   2                i=2;
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 12  

 676   2                send_pc_data[4]=send_pc_data[1];
 677   2                while(i<4)
 678   2                send_pc_data[4]^=send_pc_data[i++];
 679   2                send_pc_data[5]=0xe0; 
 680   2      //          REN=0;
 681   2      //          send_pc_count=0;
 682   2      //          SBUF=send_pc_data[send_pc_count++];
 683   2                LED1=0;     
 684   2                send_to_pc(&send_pc_data);          
 685   2            }
 686   1              else if(received_CARDHEAD_data[1]==0xdf)  
 687   1            {         
 688   2                send_pc_data[0]=0xbe;
 689   2                send_pc_data[1]=0x04;
 690   2                send_pc_data[2]=0x85;
 691   2                send_pc_data[3]=block;
 692   2                i=2;
 693   2                send_pc_data[4]=send_pc_data[1];
 694   2                while(i<4)
 695   2                send_pc_data[4]^=send_pc_data[i++];
 696   2                send_pc_data[5]=0xe0; 
 697   2      //          REN=0;
 698   2      //          send_pc_count=0;
 699   2      //          SBUF=send_pc_data[send_pc_count++];
 700   2                LED1=0;
 701   2                send_to_pc(&send_pc_data);
 702   2            }     
 703   1      }
 704          //***//
 705          
 706          //******************************//
 707          //name:Change_CardHead_Password
 708          //discription:更改卡头密码 A密
 709          //in:
 710          //out:
 711          void Change_CardHead_Password(unsigned char *inpass)
 712          {
 713   1              char i=0;
 714   1              unsigned char newpass[6];
 715   1              i=0;
 716   1              while(i<6)
 717   1              {
 718   2                  newpass[i]=inpass[4+i];
 719   2                  i++;
 720   2              }
 721   1              cardhead_writecardheadpass(inpass[2],inpass[3],&newpass); 
 722   1              receive_card_state=0;   
 723   1              while(receive_card_state==0x00);
 724   1              if(received_CARDHEAD_data[1]==0x2B) 
 725   1              {
 726   2                  send_pc_data[0]=0xbe;
 727   2                  send_pc_data[1]=0x0b;
 728   2                  send_pc_data[2]=0x22;
 729   2                  send_pc_data[3]=inpass[2];
 730   2                  send_pc_data[4]=inpass[3];
 731   2                  i=0;
 732   2                  while(i<6)
 733   2                  {
 734   3                      send_pc_data[5+i]=inpass[4+i];
 735   3                      i++;
 736   3                  }
 737   2                  i=2;
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 13  

 738   2                  send_pc_data[11]=send_pc_data[1];
 739   2                  while(i<11)
 740   2                  send_pc_data[11]^=send_pc_data[i++];
 741   2                  send_pc_data[12]=0xe0;  
 742   2      //                REN=0;
 743   2      //                send_pc_count=0;
 744   2      //                SBUF=send_pc_data[send_pc_count++];
 745   2                  LED1=1;
 746   2                  send_to_pc(&send_pc_data);
 747   2                  return;               
 748   2      
 749   2              }
 750   1                send_pc_data[0]=0xbe;
 751   1                send_pc_data[1]=0x0b;
 752   1                send_pc_data[2]=0xa2;
 753   1                send_pc_data[3]=inpass[2];
 754   1                send_pc_data[4]=inpass[3];
 755   1                i=0;
 756   1                while(i<6)
 757   1                {
 758   2                    send_pc_data[5+i]=inpass[4+i];
 759   2                    i++;
 760   2                }
 761   1                i=2;
 762   1                send_pc_data[11]=send_pc_data[1];
 763   1                while(i<11)
 764   1                send_pc_data[11]^=send_pc_data[i++];
 765   1                send_pc_data[12]=0xe0;  
 766   1      //          REN=0;
 767   1      //          send_pc_count=0;
 768   1      //          SBUF=send_pc_data[send_pc_count++];
 769   1                LED1=0;     
 770   1                send_to_pc(&send_pc_data);          
 771   1      
 772   1      }
 773          //***//
 774          
 775          //******************************//
 776          //name:Read_1block_Card_havepass
 777          //discription:读1块数据 A密
 778          //in:
 779          //out:
 780          void Read_1block_Card_havepass(unsigned char block,unsigned char *inpass)
 781          {
 782   1            char i=0;
 783   1            unsigned char pass[6];
 784   1            cardhead_seek();
 785   1            receive_card_state=0;     
 786   1            while(receive_card_state==0x00);
 787   1            if(received_CARDHEAD_data[1]==0x20) 
 788   1            { 
 789   2              i=0;
 790   2              while(i<6)
 791   2              {
 792   3                  pass[i]=inpass[3+i];
 793   3                  i++;
 794   3              }       
 795   2              cardhead_read_havepass(block,&pass);  
 796   2              receive_card_state=0;   
 797   2              while(receive_card_state==0x00);
 798   2              if(received_CARDHEAD_data[1]==0x21) 
 799   2              {
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 14  

 800   3                  send_pc_data[0]=0xbe;
 801   3                  send_pc_data[1]=0x14;
 802   3                  send_pc_data[2]=0x03;
 803   3                  send_pc_data[3]=block;
 804   3                  i=0;
 805   3                  while(i<16)
 806   3                  {
 807   4                      send_pc_data[4+i]=received_CARDHEAD_data[2+i];
 808   4                      i++;
 809   4                  }
 810   3                  i=2;
 811   3                  send_pc_data[20]=send_pc_data[1];
 812   3                  while(i<20)
 813   3                  send_pc_data[20]^=send_pc_data[i++];
 814   3                  send_pc_data[21]=0xe0;  
 815   3      //                REN=0;
 816   3      //                send_pc_count=0;
 817   3      //                SBUF=send_pc_data[send_pc_count++];
 818   3                  LED1=1;
 819   3                  send_to_pc(&send_pc_data);
 820   3                  return;               
 821   3      
 822   3              }
 823   2                send_pc_data[0]=0xbe;
 824   2                send_pc_data[1]=0x14;
 825   2                send_pc_data[2]=0x83;
 826   2                send_pc_data[3]=block;
 827   2                i=0;
 828   2                while(i<16)
 829   2                {
 830   3                    send_pc_data[4+i]=0;
 831   3                    i++;
 832   3                }
 833   2                i=2;
 834   2                send_pc_data[20]=send_pc_data[1];
 835   2                while(i<20)
 836   2                send_pc_data[20]^=send_pc_data[i++];
 837   2                send_pc_data[21]=0xe0;
 838   2      //          REN=0;
 839   2      //          send_pc_count=0;
 840   2      //          SBUF=send_pc_data[send_pc_count++];
 841   2                LED1=0;     
 842   2                send_to_pc(&send_pc_data);          
 843   2            }
 844   1              else if(received_CARDHEAD_data[1]==0xdf)  
 845   1            {         
 846   2                send_pc_data[0]=0xbe;
 847   2                send_pc_data[1]=0x14;
 848   2                send_pc_data[2]=0x83;
 849   2                send_pc_data[3]=block;
 850   2                i=0;
 851   2                while(i<16)
 852   2                {
 853   3                    send_pc_data[4+i]=0;
 854   3                    i++;
 855   3                }
 856   2                i=2;
 857   2                send_pc_data[20]=send_pc_data[1];
 858   2                while(i<20)
 859   2                send_pc_data[20]^=send_pc_data[i++];
 860   2                send_pc_data[21]=0xe0;
 861   2      //          REN=0;
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 15  

 862   2      //          send_pc_count=0;
 863   2      //          SBUF=send_pc_data[send_pc_count++];
 864   2                LED1=0;
 865   2                send_to_pc(&send_pc_data);
 866   2            } 
 867   1      }
 868          //***//
 869          
 870          //******************************//
 871          //name:Write_1block_Card_havepass
 872          //discription:写一块数据 A密
 873          //in:
 874          //out:
 875          void Write_1block_Card_havepass(unsigned char block,unsigned char *indata0)
 876          {
 877   1            char i=0;
 878   1            unsigned char pass[6];
 879   1            unsigned char in[16];
 880   1            cardhead_seek();
 881   1            receive_card_state=0;     
 882   1            while(receive_card_state==0x00);
 883   1            if(received_CARDHEAD_data[1]==0x20) 
 884   1            { 
 885   2              i=0;
 886   2              while(i<6)
 887   2              {
 888   3                  pass[i]=indata0[3+i];
 889   3                  i++;
 890   3              } 
 891   2              i=0;
 892   2              while(i<16)
 893   2              {
 894   3                  in[i]=indata0[9+i];
 895   3                  i++;
 896   3              }         
 897   2              cardhead_write_havepass(block,&pass,&in); 
 898   2              receive_card_state=0;   
 899   2              while(receive_card_state==0x00);
 900   2              if(received_CARDHEAD_data[1]==0x22) 
 901   2              {
 902   3                  cardhead_read_havepass(block,&pass);  
 903   3                  receive_card_state=0;   
 904   3                  while(receive_card_state==0x00);
 905   3                  if(received_CARDHEAD_data[1]==0x21) 
 906   3                  {
 907   4                      send_pc_data[0]=0xbe;
 908   4                      send_pc_data[1]=0x14;
 909   4                      send_pc_data[2]=0x04;
 910   4                      send_pc_data[3]=block;
 911   4                      i=0;
 912   4                      while(i<16)
 913   4                      {
 914   5                          send_pc_data[4+i]=received_CARDHEAD_data[2+i];
 915   5                          i++;
 916   5                      }
 917   4                      i=2;
 918   4                      send_pc_data[20]=send_pc_data[1];
 919   4                      while(i<20)
 920   4                        send_pc_data[20]^=send_pc_data[i++];
 921   4                      send_pc_data[21]=0xe0;  
 922   4                      i=0;
 923   4                      while(i<16)
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 16  

 924   4                      {
 925   5                          if(in[i]==send_pc_data[4+i]) i++;
 926   5                          else break;
 927   5                      }
 928   4                      if(i==16)
 929   4                      {
 930   5          //                REN=0;
 931   5          //                send_pc_count=0;
 932   5          //                SBUF=send_pc_data[send_pc_count++];
 933   5                          LED1=1;
 934   5                          send_to_pc(&send_pc_data);
 935   5                          return;                 
 936   5                      }                 
 937   4                  }
 938   3              }
 939   2                send_pc_data[0]=0xbe;
 940   2                send_pc_data[1]=0x14;
 941   2                send_pc_data[2]=0x84;
 942   2                send_pc_data[3]=block;
 943   2                i=0;
 944   2                while(i<16)
 945   2                {
 946   3                    send_pc_data[4+i]=0;
 947   3                    i++;
 948   3                }
 949   2                i=2;
 950   2                send_pc_data[20]=send_pc_data[1];
 951   2                while(i<20)
 952   2                send_pc_data[20]^=send_pc_data[i++];
 953   2                send_pc_data[21]=0xe0;
 954   2      //          REN=0;
 955   2      //          send_pc_count=0;
 956   2      //          SBUF=send_pc_data[send_pc_count++];
 957   2                LED1=0;     
 958   2                send_to_pc(&send_pc_data);          
 959   2            }
 960   1              else if(received_CARDHEAD_data[1]==0xdf)  
 961   1            {         
 962   2                send_pc_data[0]=0xbe;
 963   2                send_pc_data[1]=0x14;
 964   2                send_pc_data[2]=0x84;
 965   2                send_pc_data[3]=block;
 966   2                i=0;
 967   2                while(i<16)
 968   2                {
 969   3                    send_pc_data[4+i]=0;
 970   3                    i++;
 971   3                }
 972   2                i=2;
 973   2                send_pc_data[20]=send_pc_data[1];
 974   2                while(i<20)
 975   2                send_pc_data[20]^=send_pc_data[i++];
 976   2                send_pc_data[21]=0xe0;
 977   2      //          REN=0;
 978   2      //          send_pc_count=0;
 979   2      //          SBUF=send_pc_data[send_pc_count++];
 980   2                LED1=0;
 981   2                send_to_pc(&send_pc_data);
 982   2            } 
 983   1      }
 984          //***//
 985          
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 17  

 986          //******************************//
 987          //name:send_to_pc
 988          //discription:发送至pc数据 uart1
 989          //in:
 990          //out:
 991          void send_to_pc(unsigned char *in)
 992          {
 993   1          char i=in[1]+2;
 994   1          TI=0;
 995   1          REN=0;
 996   1          while(i--)
 997   1          {
 998   2              SBUF=*in++;
 999   2              while(!TI);
1000   2              TI=0;
1001   2          }
1002   1          REN=1;  
1003   1      }
1004          //***//
1005          
1006          //******************************//
1007          //name:verr
1008          //discription:校验函数
1009          //in:
1010          //out:
1011          bit verr_recevie_pc(void)
1012          {
1013   1        unsigned char i=2;
1014   1        temp=receive_PC_data[1];
1015   1        while(i<receive_PC_data[1])
1016   1        {
1017   2          temp^=receive_PC_data[i];
1018   2          i++;
1019   2        }
1020   1        if(temp==receive_PC_data[receive_PC_data[1]]) return 1;
1021   1        else return 0;
1022   1      }
1023          //***//
1024          
1025          //******************************//
1026          //name:verr
1027          //discription:校验函数
1028          //in:
1029          //out:
1030          bit verr_recevie_cardhead(void)
1031          {
1032   1        unsigned char i=1;
1033   1        temp1=receive_CARDHEAD_data[0];
1034   1        while(i<(receive_CARDHEAD_data[2]+2))
1035   1        {
1036   2          temp1^=receive_CARDHEAD_data[i];
1037   2          i++;
1038   2        }
1039   1        if(temp1==(~receive_CARDHEAD_data[receive_CARDHEAD_data[2]+2])) return 1;
1040   1        else return 0;
1041   1      }
1042          //***//
1043          
1044          //******************************//
1045          //name:cardhead_seek
1046          //discription:发送指令到卡头，寻卡
1047          //in:
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 18  

1048          //out:
1049          void cardhead_seek(void)
1050          {
1051   1      //  unsigned char send_data[6];
1052   1        send_data[0]=0xaa;
1053   1        send_data[1]=0x55;
1054   1        send_data[2]=0x03;
1055   1        send_data[3]=0x20;
1056   1        send_data[4]=0x00;
1057   1        send_data[5]=0x23;
1058   1        send_cmd_to_cardhead(&send_data);
1059   1      }
1060          //***//
1061          
1062          //******************************//
1063          //name:cardhead_read
1064          //discription:发送指令到卡头，读卡
1065          //in:
1066          //out:
1067          void cardhead_read(unsigned char block)
1068          {
1069   1        //unsigned char send_data[9];
1070   1        unsigned char i=0;
1071   1        send_data[0]=0xaa;
1072   1        send_data[1]=0x55;
1073   1        send_data[2]=0x06;
1074   1        send_data[3]=0x21;
1075   1        send_data[4]=0x02;
1076   1        send_data[5]=block;
1077   1        send_data[6]=0x80;
1078   1        send_data[7]=0;
1079   1        i=3;
1080   1        send_data[8]=send_data[2];
1081   1        while(i<8)
1082   1        send_data[8]^=  send_data[i++];
1083   1        send_cmd_to_cardhead(&send_data);
1084   1      }
1085          //***//
1086          
1087          //******************************//
1088          //name:cardhead_read_havepass
1089          //discription:发送指令到卡头，读卡
1090          //in:
1091          //out:
1092          void cardhead_read_havepass(unsigned char block,unsigned char *pass)
1093          {
1094   1        //unsigned char send_data[9];
1095   1        unsigned char i=0;
1096   1        send_data[0]=0xaa;
1097   1        send_data[1]=0x55;
1098   1        send_data[2]=0x0a;
1099   1        send_data[3]=0x21;
1100   1        send_data[4]=0x00;
1101   1        send_data[5]=block;
1102   1        i=0;
1103   1        while(i<6)
1104   1            send_data[6+(i++)]=*pass++;
1105   1        i=3;
1106   1        send_data[12]=send_data[2];
1107   1        while(i<12)
1108   1        send_data[12]^= send_data[i++];
1109   1        send_cmd_to_cardhead(&send_data);
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 19  

1110   1      }
1111          //***//
1112          
1113          //******************************//
1114          //name:cardhead_write
1115          //discription:发送指令到卡头，写卡
1116          //in:
1117          //out:
1118          void cardhead_write(unsigned char block,unsigned char *indata11)
1119          {
1120   1        //unsigned char send_data[25];
1121   1        unsigned char i=0;
1122   1        send_data[0]=0xaa;
1123   1        send_data[1]=0x55;
1124   1        send_data[2]=0x16;
1125   1        send_data[3]=0x22;
1126   1        send_data[4]=0x02;
1127   1        send_data[5]=block;
1128   1        send_data[6]=0x80;
1129   1        send_data[7]=0; 
1130   1        i=0;
1131   1        while(i<16)
1132   1        {
1133   2            send_data[8+i]=indata11[i];
1134   2            i++;
1135   2        }
1136   1        i=3;
1137   1        send_data[24]=send_data[2];
1138   1        while(i<24)
1139   1          send_data[24]^= send_data[i++]; 
1140   1        send_cmd_to_cardhead(&send_data);
1141   1      }
1142          //***//
1143          
1144          //******************************//
1145          //name:cardhead_write_havepass
1146          //discription:发送指令到卡头，写卡
1147          //in:
1148          //out:
1149          void cardhead_write_havepass(unsigned char block,unsigned char *pass,unsigned char *indata)
1150          {
1151   1        //unsigned char send_data[25];
1152   1        unsigned char i=0;
1153   1        send_data[0]=0xaa;
1154   1        send_data[1]=0x55;
1155   1        send_data[2]=0x1a;
1156   1        send_data[3]=0x22;
1157   1        send_data[4]=0x00;
1158   1        send_data[5]=block;
1159   1        i=0;
1160   1        while(i<6)
1161   1            send_data[6+(i++)]=*pass++;
1162   1      
1163   1        i=0;
1164   1        while(i<16)
1165   1            send_data[12+(i++)]=*indata++;
1166   1        i=3;
1167   1        send_data[28]=send_data[2];
1168   1        while(i<28)
1169   1        send_data[28]^= send_data[i++];
1170   1        send_cmd_to_cardhead(&send_data);
1171   1      }
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 20  

1172          //***//
1173          
1174          //******************************//
1175          //name:cardhead_writepass
1176          //discription:发送指令到卡头，写卡密码
1177          //in:
1178          //out:
1179          void cardhead_writepass(unsigned char block,unsigned char *oldpass,unsigned char *newpass)
1180          {
1181   1        //unsigned char send_data[29];
1182   1        unsigned char i=0;
1183   1        send_data[0]=0xaa;
1184   1        send_data[1]=0x55;
1185   1        send_data[2]=0x1a;
1186   1        send_data[3]=0x22;
1187   1        send_data[4]=0x00;
1188   1        send_data[5]=block;
1189   1        i=0;
1190   1        while(i<6)
1191   1          send_data[6+(i++)]= *oldpass++;
1192   1        i=0;
1193   1        while(i<6)
1194   1          send_data[12+(i++)]= *newpass++;
1195   1          
1196   1        send_data[18]=0xff;
1197   1        send_data[19]=0x07;
1198   1        send_data[20]=0x80;
1199   1        send_data[21]=0x69;
1200   1        
1201   1        send_data[22]=0xff;
1202   1        send_data[23]=0xff;
1203   1        send_data[24]=0xff;
1204   1        send_data[25]=0xff;
1205   1        send_data[26]=0xff;
1206   1        send_data[27]=0xff;
1207   1      
1208   1        i=3;
1209   1        send_data[28]=send_data[2];
1210   1        while(i<28)
1211   1        send_data[28]^= send_data[i++];
1212   1        send_cmd_to_cardhead(&send_data);
1213   1      }
1214          //***//
1215          
1216          //******************************//
1217          //name:cardhead_write_havepass
1218          //discription:发送指令到卡头，写卡
1219          //in:
1220          //out:
1221          void cardhead_writecardheadpass(unsigned char addrl,unsigned char addrh,unsigned char *pass)
1222          {
1223   1        //unsigned char send_data[25];
1224   1        unsigned char i=0;
1225   1        send_data[0]=0xaa;
1226   1        send_data[1]=0x55;
1227   1        send_data[2]=0x0a;
1228   1        send_data[3]=0x2b;
1229   1        send_data[4]=addrl;//0x80
1230   1        send_data[5]=addrh;//0x00
1231   1        i=0;
1232   1        while(i<6)
1233   1            send_data[6+(i++)]=*pass++;
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 21  

1234   1        i=3;
1235   1        send_data[12]=send_data[2];
1236   1        while(i<12)
1237   1        send_data[12]^= send_data[i++];
1238   1        send_cmd_to_cardhead(&send_data);
1239   1      }
1240          //***//
1241          
1242          //******************************//
1243          //name:cardhead_OPENorCLOSE
1244          //discription:发送指令到卡头
1245          //in:
1246          //out:
1247          void cardhead_OPENorCLOSE(unsigned char oc)
1248          {
1249   1        //unsigned char send_data[6];
1250   1        unsigned char i=0;
1251   1        send_data[0]=0xaa;
1252   1        send_data[1]=0x55;
1253   1        send_data[2]=0x03;
1254   1        send_data[3]=0x11;
1255   1        send_data[4]=oc;
1256   1        i=3;
1257   1        send_data[5]=send_data[2];
1258   1        while(i<5)
1259   1        send_data[5]^=  send_data[i++];
1260   1      //  send_data[8]=~send_data[8];
1261   1        send_cmd_to_cardhead(&send_data);
1262   1      }
1263          //***//
1264          
1265          //******************************//
1266          //name:send_cmd_to_cardhead
1267          //discription:发送指令到卡头
1268          //in:
1269          //out:
1270          void send_cmd_to_cardhead(unsigned char *in)
1271          {
1272   1        unsigned char i=0;
1273   1        S2CON&=0xef;
1274   1        S2CON&=0xfd;
1275   1        while(i<(in[2]+3))
1276   1        {   
1277   2          S2BUF=in[i++];
1278   2          while((S2CON&0x02)!=0x02);
1279   2          S2CON&=0xfd;
1280   2          LED8=!LED8;
1281   2        }
1282   1        S2CON&=0xfc;
1283   1        S2CON|=0x10;
1284   1      }
1285          //***//
1286          
1287          
1288          //******************************//
1289          //name:verr
1290          //discription:校验函数
1291          //in:
1292          //out:
1293          //bit SAMPLE(void)
1294          //{
1295          
C51 COMPILER V9.00   STC_USER                                                              03/15/2017 16:59:07 PAGE 22  

1296          //}
1297          //***//
1298          
1299          
1300          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5594    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    108    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8     142
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
